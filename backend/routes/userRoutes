const express = require("express");

const sql = require("mssql");

const {registerUser, signInUser,getAllUsers,deleteUser,markAsRead,getNotifications} = require("../controllers/userController");

const router = express.Router();

// Endpoint: Register a new user
router.post("/addUser",registerUser);
router.post("/user",signInUser)
router.get('/all', getAllUsers);
router.delete('/delete/:id',deleteUser);
router.patch('/notifications/:id', markAsRead);
router.get('notifications/:id', getNotifications);
 


// Endpoint: Get all users (for admin)
router.get("/", async (req, res) => {
  try {
    const request = new sql.Request();
    const result = await request.query("SELECT * FROM User");
    res.status(200).json(result.recordset);
  } catch (error) {
    console.error("Error fetching users:", error);
    res.status(500).json({ error: "Failed to fetch users." });
  }
});

// Endpoint: Get a specific user's details by ID
router.get("/:id", async (req, res) => {
  const { id } = req.params;

  try {
    const request = new sql.Request();
    const result = await request.query(`SELECT * FROM User WHERE id = ${id}`);
    if (result.recordset.length === 0) {
      return res.status(404).json({ message: "User not found." });
    }
    res.status(200).json(result.recordset[0]);
  } catch (error) {
    console.error("Error fetching user:", error);
    res.status(500).json({ error: "Failed to fetch user." });
  }
});

// Endpoint: Update user details
router.put("/:id", async (req, res) => {
  const { id } = req.params;
  const { name, email, password, phone_number } = req.body;

  try {
    const request = new sql.Request();
    const query = `
      UPDATE User
      SET name = '${name}', email = '${email}', password = '${password}', phone_number = '${phone_number}'
      WHERE id = ${id};
    `;
    await request.query(query);
    res.status(200).json({ message: "User updated successfully!" });
  } catch (error) {
    console.error("Error updating user:", error);
    res.status(500).json({ error: "Failed to update user." });
  }
});

// Endpoint: Delete a user
router.delete("/:id", async (req, res) => {
  const { id } = req.params;

  try {
    const request = new sql.Request();
    const query = `DELETE FROM User WHERE id = ${id}`;
    await request.query(query);
    res.status(200).json({ message: "User deleted successfully!" });
  } catch (error) {
    console.error("Error deleting user:", error);
    res.status(500).json({ error: "Failed to delete user." });
  }
});

module.exports = router;
